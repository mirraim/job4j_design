Версия JVM - HotSpot(TM) 64-Bit

Размер пустого обьекта (В байтах):
размер заголовка - 16
int id - 4;
String name - 0  до инициализации;
short age - 2;
boolean married - 4;
char gender - 2;

Итого: 16+4+2+4+2 = 28 байт. Т.к.  размер объекта кратен 8, после выравнивания для кратности получаем 32 байта

Размер объекта String в случае его инициализации:
Заголовок: 16
byte coder - 1
int hash - 4
boolean hashIsZero - 4
Ссылочная переменная на объект массива: 8

Итого: 33 байта, выравниваем до 40

Массив char[]:
Заголовок: 16 байт + 4 байта на длину массива == 20 байт
Примитивы char: 2 байта * 1 == 2 байта
Итого: 22 байта, выравниваем до 24.

Всего на String получается 64 байта (метод sizeOf для String выдает только 48, при этом размер массива char также 24,
как у меня получилось. Я не знаю, где искать ошибку.)

Будем считать, что обьект User c инициализированным полем name будет занимать 64+32 = 96 байт

Если максимальный размер хипа меньше 6 мб, то на моем ноуте возникает java.lang.OutOfMemoryError, поэтому
сделаем размер хипа 6мб  (-Xmx5m -Xms6m)

Поэтому, теоретически, сборщик мусора должен автоматически запуститься, если создать (5*1024*1024)/96 = 54 614 обьекта User
Однако по какой-то странной причине сборщик мусора у меня запускается при достижении количества User примерно в
8000 экземпляров (т.е при размере кучи 750 кб).

